// This allows easily building out according to our naming convention, the
// various dialogue / lookup tables (to work around the MULTIG fallback).
// This enables PID so CHARNAME can talk to the NPCs.
// In an EET install, if we don't do the latter segment, MULTIG takes
// precedence until EET_End is ran, which can really hinder mod development
// iteration.
// TODO: I may want a check here, so if this mod comes after EET_End, I
// can test and make sure all is well - and perhaps use the not eet game
// segment to allow EET_End to "properly" close up the dialog (or just keep the latter)
DEFINE_ACTION_FUNCTION ux_dialog_tables STR_VAR code = "xxx" BEGIN

// https://www.gibberlings3.net/forums/topic/15833-dialog-files-and-how-they-are-referenced/
// First block runs if uxvoi isn't present, and we are NOT using a TOB entry
// Second block runs if uxvoi isn't preset, and we ARE using a TOB entry
// Ensure these are all 8 or fewer for the resref I guess
// P = Party join/leave, J = interjections and dialogue, D = Dream Script (rest)
// 25 variations - not sure...
ACTION_IF NOT GAME_IS ~eet~ BEGIN
  APPEND ~pdialog.2da~
  ~ux%code%         ux%code%p              ux%code%j             ux%code%d~
  UNLESS ~ux%code%~
  UNLESS ~25POST~ // if we do not have tob tables,


  APPEND ~pdialog.2da~
  ~ux%code%         ux%code%p              ux%code%j             ux%code%d              ux%code%25p             ux%code%25j             ux%code%25d       ux%code%25s~
  UNLESS ~ux%code%~
  IF ~25POST~ // if we do have tob tables


  // interdia.2da is a bit simpler, but acts the same as pdialog.2da.
  // It adds the NPCs banter file, which is used for inter-party banter, and romance dialogues.
  APPEND ~interdia.2da~
  ~ux%code% uxb%code%~
  UNLESS ~ux%code%~
  UNLESS ~25FILE~

  APPEND ~interdia.2da~
  ~ux%code% uxb%code% uxb%code%25~
  UNLESS ~ux%code%~
  IF ~25FILE~
END

// This may fix MULTIG lookup in an EET game pre-EET_End
ACTION_IF GAME_IS ~eet~ BEGIN
  // This also gets added in that scenario
  APPEND ~bddialog.2da~
  ~ux%code%         ux%code%p              ux%code%j             ux%code%d~
  UNLESS ~ux%code%~
  UNLESS ~25POST~ // if we do not have tob tables,

  APPEND ~25dialog.2da~
  ~UX%CODE%             ux%code%25p          UX%CODE%J            ux%code%25d~
  UNLESS ~ux%code%~
  UNLESS ~25POST~ // if we do not have tob tables,


  APPEND ~bgdialog.2da~
  ~ux%code%         ux%code%p              ux%code%j             ux%code%d~
  UNLESS ~ux%code%~
  UNLESS ~25POST~ // if we do not have tob tables,

  // For EET, it expects to use this type of format I guess?  Stars in the slots
  //~ux%code%         ux%code%p              ux%code%j             ux%code%d              ux%code%25p             ux%code%25j             ux%code%25d       ux%code%25s~
  APPEND ~pdialog.2da~
  ~ux%code%                  ux%code%p                 ux%code%j                 ux%code%d                 ***                    ***                    ***                    ***~
  UNLESS ~ux%code%~
  IF ~25POST~ // if we do have tob tables

  // This is usually the area for banter
  APPEND ~interdia.2da~
  ~ux%code%     uxb%code%    ***~
  UNLESS ~ux%code%~
  IF ~25FILE~

  // Another EET special - more areas for banter.
  // 25banter.2da
  // bdbanter.2da
  // bgbanter.2da
  APPEND ~bgbanter.2da~ ~ux%code%     uxb%code%~ UNLESS ~ux%code%~
  APPEND ~25banter.2da~ ~ux%code%     uxb%code%~ UNLESS ~ux%code%~
  APPEND ~bdbanter.2da~ ~ux%code%     uxb%code%~ UNLESS ~ux%code%~
END
END


DEFINE_ACTION_FUNCTION ux_cre_compile STR_VAR name = "xxxxx" code = "xxx" BEGIN
// All banters with other party members will go here. We need
// the "EVALUATE_BUFFER" because the chapter variable now uses
// the OUTER_SPRINT variable defined above for the EET continuous journal system.
COMPILE EVALUATE_BUFFER
  ~%MOD_FOLDER%/dialogues/ux_banter_%name%.d~
  ~%MOD_FOLDER%/dialogues/ux_greet_%name%.d~  // Greeting dialogue will go here.
  ~%MOD_FOLDER%/dialogues/ux_pids_%name%.d~ // The rest of dialogue: commentary, interjections, talks with the player, lovetalks and everything else.
  ~%MOD_FOLDER%/dialogues/ux_kick_%name%.d~ // leaving party dialogue will go here.

  // ~%MOD_FOLDER%/scripts/ux_main_%name%.baf~ // Main script.
  // ~%MOD_FOLDER%/scripts/ux_dream_%name%.baf~ // Dream script for events at rest. If you want your NPC to talk to you at rest, add scripting here.
  // ~%MOD_FOLDER%/scripts/ux_fix_%name%.baf~ // "fixing" script. Remember how various modders advised you to "select your NPC and press K"? Well, that's how they do it.

// Alias scripts
COPY ~%MOD_FOLDER%/scripts/ux_main_%name%.baf~  ~override/ux%code%s.bcs~ COMPILE_BAF_TO_BCS
COPY ~%MOD_FOLDER%/scripts/ux_dream_%name%.baf~ ~override/ux%code%d.bcs~ COMPILE_BAF_TO_BCS
COPY ~%MOD_FOLDER%/scripts/ux_fix_%name%.baf~   ~override/ux%code%f.bcs~ COMPILE_BAF_TO_BCS
END

// Try to just include this once - not sure if that feature is natively supported or not
ACTION_IF GAME_IS ~eet~ BEGIN //only true if game is detected as Enhanced Edition Trilogy (mod for BG2:EE)
  INCLUDE ~EET/other/EET_functions.tph~ //declaration of external EET functions used below. This is part of the EET package the player has in his install so don't worry about it
END

DEFINE_ACTION_FUNCTION ux_eet_setup STR_VAR name = "xxxxx" code = "xxx" BEGIN
// EET related code
ACTION_IF GAME_IS ~eet~ BEGIN //only true if game is detected as Enhanced Edition Trilogy (mod for BG2:EE)
  LAF ~EET_NPC_TRANSITION~ //function used to automatically implement EET continuity system. This deals with the transition to ToB and automatically creates all the needed script blocks and dialogue entries for e.g. the calling of the SoA Branwen the player left somewhere via the fate spirit, the disabling of the fate spirit calling if Branwen is in the party upon transition etc. The function will be executed upon installation of the mod. What follows is all entries we need for our Branwen:
    INT_VAR
      type = 3 //informs the function that this is BG2 NPC without BG1 content (because the mod doesn't add to BG1)
      default_ToB = 1 //NPC available as summonable NPC when the game is started in ToB (= new ToB game)
      clean_ToB = 1 //forces function to clean old BG1 Branwen code that exists in AR4000.BCS and FATESP.DLG (i.e. no entry for the original BG1 Branwen if this mod is installed)
    STR_VAR
      dv = EVAL "ux%code%" //Branwen Death Variable (script name)
      override_BG1 = EVAL "ux%code%s" //Branwen SoA Override script
      override_SoD = EVAL "ux%code%s" //Branwen SoA Override script
      override_SoA = EVAL "ux%code%s" //Branwen SoA Override script
      override_ToB = EVAL "ux%code%25s" //Branwen ToB Override script
      dialog_ToB = EVAL "ux%code%25" //Branwen ToB dialogue file
      cre_ToB = EVAL "ux%code%25" //Branwen ToB CRE filename
      traFile = EVAL "%MOD_FOLDER%/tra/%LANGUAGE%/fatesp.tra"
      string = "@0" //from the TRA file specified via traFile
      stringPosDV = "Cernd" //Branwen will be appended right above Cernd
      clean_ToB_DV = EVAL "%name%" //death variable of BG1 Branwen (see clean_ToB comment)
  END
END ELSE BEGIN //we use different Fate Spirit dialogue patching for any other platform than EET
  ACTION_IF FILE_EXISTS_IN_GAME ~mel01.cre~ THEN // Just add the fate stuff if we are on tob
  BEGIN
    COMPILE ~%MOD_FOLDER%/dialogues/fatesp.d~ USING "%MOD_FOLDER%/tra/%LANGUAGE%/fatesp.tra"
  END
END

END
